name: Dispatch Cluster Deployments

on:
  # pull_request:
  #   types: [closed]
  - pull_request

jobs:
  detect-and-dispatch:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed clusters
        id: detect
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
          echo "Changed files:"
          echo "$CHANGED_FILES"

          CLUSTERS=""
          for FILE in $CHANGED_FILES; do
            if [[ "$FILE" == clusters/*/*.yaml ]]; then
              CLUSTER_NAME=$(echo "$FILE" | cut -d'/' -f2)
              CLUSTERS="$CLUSTERS $CLUSTER_NAME"
            fi
          done

          UNIQUE_CLUSTERS=$(echo $CLUSTERS | tr ' ' '\n' | sort -u | tr '\n' ' ')
          echo "clusters=$UNIQUE_CLUSTERS" >> $GITHUB_OUTPUT

      - name: echo url
        id: echo-url
        run: |
          echo https://api.github.com/repos/${{ github.repository }}/actions/workflows/cluster-deploy.yaml/dispatches
      - name: echo ref
        id: echo-ref
        run: |
          echo ${{ github.ref }}
      - name: List workflows
        run: ls -l .github/workflows/

      - name: Get workflow ID
        id: workflow-id
        run: |
          WORKFLOW_NAME=".github/workflows/cluster_deploy.yaml"
          ID=$(curl -s -H "Authorization: Bearer ${{ secrets.TRIGGER_WORKFLOW_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows \
            | jq ".workflows[] | select(.path==\"$WORKFLOW_NAME\") | .id")
          echo "workflow_id=$ID" >> $GITHUB_OUTPUT

      # - name: Dispatch workflows per cluster
      #   if: steps.detect.outputs.clusters != ''
      #   run: |
      #     IFS=' ' read -r -a clusters <<< "${{ steps.detect.outputs.clusters }}"
      #     WORKFLOW_ID="${{ steps.workflow-id.outputs.workflow_id }}"
      #     BRANCH="${GITHUB_HEAD_REF:-main}"
      #     echo $WORKFLOW_ID
      #     echo $BRANCH
      #     for cluster in "${clusters[@]}"; do
      #       echo "Dispatching deploy for cluster: $cluster"
      #       RESPONSE=$(curl -L \
      #         -X POST \
      #         -H "Accept: application/vnd.github+json" \
      #         -H "Authorization: Bearer ${{ secrets.TRIGGER_WORKFLOW_TOKEN }}" \
      #         https://api.github.com/repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/dispatches \
      #         -d "{\"ref\":\"$BRANCH\",\"inputs\":{\"cluster\":\"$cluster\"}}" \
      #         -w "%{http_code}" -o /dev/null)
      #       if [ "$RESPONSE" -ne 204 ]; then
      #         echo "Error: Failed to dispatch workflow for cluster: $cluster (HTTP status: $RESPONSE)"
      #         exit 1
      #       fi
      #     done

      - name: List workflows
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH="${GITHUB_HEAD_REF:-main}"
          gh workflow list

      - name: Dispatch workflows per cluster
        if: steps.detect.outputs.clusters != ''
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          IFS=' ' read -r -a clusters <<< "${{ steps.detect.outputs.clusters }}"
          WORKFLOW_ID="${{ steps.workflow-id.outputs.workflow_id }}"
          BRANCH="${GITHUB_HEAD_REF:-main}"
          for cluster in "${clusters[@]}"; do
            echo "Dispatching deploy for cluster: $cluster"
            gh workflow run $WORKFLOW_ID \
              --ref $BRANCH \
              -F cluster="$cluster"
          done
          